<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reservation.vaccine.mapper.Mapper">

    <!--resutMap-->
    <resultMap type="reservation.vaccine.domain.HospitalLocation" id="HospitalLocation">
        <result column="rest_Haddr" property="rest_Haddr"/>
    </resultMap>

    <resultMap type="reservation.vaccine.domain.Vaccine" id="Vaccine">
        <result column="Vname" property="Vname"/>
        <result column="Vid" property="Vid"/>
    </resultMap>

    <resultMap type="reservation.vaccine.domain.Hospital" id="Hospital">
        <result column="Hid" property="Hid"/>
        <result column="Hname" property="Hname"/>
        <result column="Htel" property="Htel"/>
        <result column="rest" property="rest"/>
        <collection property="hospitalLocation" resultMap="HospitalLocation"/>
        <collection property="vaccine" resultMap="Vaccine"/>
    </resultMap>

    <select id="findUserByIdPw" resultType="reservation.vaccine.domain.UserInfo" parameterType="map">
        select * from user_info where ID = #{ID} and PW = #{PW}
    </select>

    <select id="findUserById" resultType="reservation.vaccine.domain.UserInfo" parameterType="String">
        select * from user_info where ID = #{ID}
    </select>

    <select id="insertUser" parameterType="reservation.vaccine.domain.UserInfo">
        insert into user_info (Uname, ID, PW, Lid, rest_addr, sex, phone_num, age, ssn1, ssn2, Email)
        values(#{Uname}, #{ID}, #{PW}, #{Lid}, #{rest_addr}, #{sex}, #{phone_num}, #{age}, #{ssn1}, #{ssn2}, #{Email})
    </select>

    <select id="modifyUser" parameterType="reservation.vaccine.domain.UserInfo">
        UPDATE user_info
        SET Uname = #{Uname}, PW = #{PW}, Lid = #{Lid}, rest_addr = #{rest_addr}, phone_num = #{phone_num}, Email = #{Email}
        WHERE ID = #{ID};
    </select>

    <select id="updateUserState" parameterType="reservation.vaccine.domain.UserInfo">
        UPDATE user_info
        SET state = #{state}
        WHERE Uid = #{Uid};
    </select>

    <select id="updateUserRsv2nd" parameterType="reservation.vaccine.domain.UserRsv">
        UPDATE user_rsv
        SET Vid_2 = #{Vid_2}, Hid_2 = #{Hid_2}, date_2 = #{date_2}, hour_2 = #{hour_2}
        WHERE Uid = #{Uid};
    </select>

    <select id="findUserID" resultType="String" parameterType="map">
        select ID from user_info where Uname = #{Uname} and Email = #{Email}
    </select>

    <select id="findUserPW" resultType="String" parameterType="map">
        select PW from user_info where Uname = #{Uname} and ID = #{ID}
    </select>

    <!--Reservation-->
    <select id="insertRsv" parameterType="reservation.vaccine.domain.UserRsv">
        insert into user_rsv (Uid, Vid_1, Hid_1, date_1, hour_1, Vid_2, Hid_2, date_2, hour_2)
        values(#{Uid}, #{Vid_1}, #{Hid_1}, #{date_1}, #{hour_1}, #{Vid_2}, #{Hid_2}, #{date_2}, #{hour_2})
    </select>

    <select id="findUserRsv" resultType="reservation.vaccine.domain.UserRsv" parameterType="int">
        select *
        from user_rsv
        where Uid = #{Uid};
    </select>

    <select id="cancelAll" parameterType="int">
        delete from user_rsv where Uid = #{Uid};
    </select>

    <select id="cancelSecond" parameterType="int">
        UPDATE user_rsv
        SET Vid_2 = null, Hid_2 = null, date_2 = null, hour_2 = null
        WHERE Uid = #{Uid};
    </select>

    <select id="checkID" resultType="int" parameterType="String">
        select count(ID) from user_info where ID = #{ID}
    </select>

    <!--hospital-->
    <select id="findAllHospitalByUid" resultMap="Hospital" parameterType="int">
        select h.Hid, h.Hname, hl.rest_Haddr, h.Htel, h.rest, v.Vname
        from hospital as h, hospital_location as hl, user_info as ui, vaccine as v
        where h.Hid = hl.Hid and hl.Lid = ui.Lid and ui.Uid = #{Uid} and h.Vid = v.Vid
        order by h.Hid;
    </select>

    <select id="findHospitalByHid" resultMap="Hospital" parameterType="int">
        select h.Hid, h.Hname, hl.rest_Haddr, h.Htel, h.rest, v.Vname, v.Vid
        from hospital as h join hospital_location as hl join vaccine as v
        on h.Hid = hl.Hid and h.Vid = v.Vid
        where h.Hid = #{Hid};
    </select>

    <select id="findHidbyHname" parameterType="string" resultType="int">
        select Hid
        from hospital
        where Hname = #{Hname};
    </select>

    <select id="findHospitalNameByHid" resultType="String" parameterType="int">
        select Hname
        from hospital
        where Hid = #{Hid};
    </select>

    <select id="reservation" parameterType="int">
        update hospital set rest = rest - 2 where Hid = #{Hid};
    </select>

    <select id="reservation2nd" parameterType="int">
        update hospital set rest = rest - 1 where Hid = #{Hid};
    </select>

    <select id="cancelBackAll" parameterType="int">
        update hospital set rest = rest + 2 where Hid = #{Hid};
    </select>

    <select id="cancelBackEach" parameterType="int">
        update hospital set rest = rest + 1 where Hid = #{Hid};
    </select>

    <!--visual-->
    <select id="visualizeByLocation" resultType="reservation.vaccine.domain.Location">
        select l.Lid, l.Lname, count(*) / l.population * 1000000 as ratio
        from location as l, user_info as ui
        where l.Lid = ui.Lid and ui.state = 5
        group by l.Lid
    </select>

    <select id="findVaccinatedByAge" resultType="int" parameterType="int">
        select count(*)
        from user_info as ui
        where
        (
        ((#{ageGroup}=8) and (ui.age>=80 and ui.state >= 4))
        or
        ((#{ageGroup} != 8) and (ui.age between #{ageGroup}*10 and (#{ageGroup}*10)+9 and ui.state >= 4))
        or
        ((#{ageGroup}=1) and (ui.age&lt;20 and ui.state >= 4))
        );
    </select>

    <select id="findAllByAge" resultType="int" parameterType="int">
        select count(*)
        from user_info as ui
        where
        (
        ((#{ageGroup}=8) and (ui.age>=80))
        or
        ((#{ageGroup} != 8) and  (ui.age between #{ageGroup}*10 and (#{ageGroup}*10)+9))
        or
        ((#{ageGroup}=1) and (ui.age&lt;20))
        );
    </select>

    <select id="findAllByStateDate2" resultType="int" parameterType="int">
        select count(*)
        from user_info as ui, user_rsv as ur
        where ui.Uid=ur.Uid and month(ur.date_2)=#{month} and ui.state>=4;
    </select>

    <!--review-->
    <select id="findUserReviewByUidHid" parameterType="map" resultType="int">
        select RVid
        from review
        where Uid = #{Uid} and Hid = #{Hid};
    </select>

    <select id="insertReview" parameterType="reservation.vaccine.domain.Review">
        insert into review (Uid, Hid, review, star)
        values(#{Uid}, #{Hid}, #{review}, #{star})
    </select>

    <select id="findReview" resultType="reservation.vaccine.domain.Review" parameterType="map">
        select *
        from review
        where Uid = #{Uid} and Hid = #{Hid}
    </select>

    <select id="getAvgStar" resultType="float" parameterType="int">
        select avg(star)
        FROM review
        where Hid = #{Hid};
    </select>

    <select id="findALlReviewByHid" parameterType="int" resultType="string">
        select review
        FROM review
        where Hid = #{Hid}
        order by RVid;
    </select>

    <select id="deleteReview" parameterType="int">
        delete from review
        where RVid = #{RVid}
    </select>

    <!--survey-->
    <select id="insertSurvey" parameterType="reservation.vaccine.domain.Survey">
        insert into survey values(#{Uid}, #{Vid_1}, #{day1_1}, #{day3_1}, #{day7_1}, #{Vid_2}, #{day1_2}, #{day3_2}, #{day7_2});
    </select>

    <select id="findVaccineNameByVid" parameterType="int" resultType="string">
        select Vname
        from vaccine
        where Vid = #{Vid};
    </select>


</mapper>